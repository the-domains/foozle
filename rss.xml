<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[foozle]]></title>
        <description><![CDATA[foozle]]></description>
        <link>https://thegrid.ai/foozle/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Sun, 10 Apr 2016 10:12:01 GMT</lastBuildDate>
        <atom:link href="https://thegrid.ai/foozle/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Browserhacks]]></title>
            <description><![CDATA[<article><h1>Browserhacks</h1><p>An extensive list of browser specific CSS and JavaScript hacks from all over the interwebs.</p></article>]]></description>
            <link>http://browserhacks.com/</link>
            <guid isPermaLink="false">84fbf975-18b1-42e0-96f7-fe6460ea097a</guid>
            <pubDate>Sun, 10 Apr 2016 10:12:00 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[What is the Definition of a "CSS Hack"?]]></title>
            <description><![CDATA[<article><h1>What is the Definition of a "CSS Hack"?</h1><p>If you've been writing CSS for at least a couple of years, then you've most certainly used a CSS hack. But if you're relatively new to CSS, it's possible you've heard the term but aren't sure exactly what it means.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/8760515e092f1e956176cc23326323b5b840e5ae.png"></article>]]></description>
            <link>http://www.sitepoint.com/what-is-the-definition-of-a-css-hack/</link>
            <guid isPermaLink="false">7a60108f-6b36-4388-8873-e1cc743388a6</guid>
            <pubDate>Sun, 10 Apr 2016 10:11:48 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Year Without jQuery]]></title>
            <description><![CDATA[<article><h1>A Year Without jQuery</h1><p>Dropping the trusted workhorse from our front-end back in 2014 has led to a faster, leaner platform</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/683ca3d38cebf14ab4ced205cbf7d676de229c7b.png"></article>]]></description>
            <link>http://blog.wearecolony.com/a-year-without-jquery/</link>
            <guid isPermaLink="false">5cf2492a-5602-4bda-989e-4ff3575364e5</guid>
            <pubDate>Sun, 10 Apr 2016 10:11:37 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Styling Broken Images]]></title>
            <description><![CDATA[<article><h1>Styling Broken Images</h1><p>Broken images are ugly. But they don't always have to be. We can use CSS to apply styles to the element to provide a better experience than the default. To understand how we can style broken images, there are two facts about the way the element behaves that we need to understand first.</p></article>]]></description>
            <link>http://bitsofco.de/styling-broken-images/</link>
            <guid isPermaLink="false">c5c0d001-793b-41fd-bd30-932716e7a94f</guid>
            <pubDate>Sun, 10 Apr 2016 10:11:26 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Annotating Your (Critical) CSS | CSS-Tricks]]></title>
            <description><![CDATA[<article><h1>Annotating Your (Critical) CSS | CSS-Tricks</h1><p>The following is a guest post by Wladston Ferreira Filho. We've covered critical CSS before, but the technique covered was specific to SCSS. Here Wladston covers the basics and introduces another way to do it, through PostCSS, and shows an example (with data) of the result.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/53e5b577e7f245f043880c8cebe4a8431184cb37.png"></article>]]></description>
            <link>https://css-tricks.com/annotating-critical-css/</link>
            <guid isPermaLink="false">29cf08a2-778a-43a3-abb1-4bcb24d5dc10</guid>
            <pubDate>Sun, 10 Apr 2016 10:10:59 GMT</pubDate>
        </item>
    </channel>
</rss>